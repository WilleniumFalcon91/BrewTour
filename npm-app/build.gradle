/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */
buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath 'com.moowork.gradle:gradle-node-plugin:1.2.0'
    }
}
apply plugin: 'base'
apply plugin: 'com.moowork.node' // gradle-node-plugin


node {
    /* gradle-node-plugin configuration
       https://github.com/srs/gradle-node-plugin/blob/master/docs/node.md
       Task name pattern:
       ./gradlew npm_<command> Executes an NPM command.
    */
    // Version of node to use.
    version = '10.15.0'
    // Version of npm to use.
    yarnVersion = '1.12.3'
    // If true, it will download node using above parameters.
    // If false, it will try to use globally installed node.
    download = true
}

yarn_run_start {
    inputs.files fileTree("public")
    inputs.files fileTree("src")
    inputs.file 'package.json'
    inputs.file 'yarn.lock'
    outputs.dir 'build'
}

assemble.dependsOn packageNpmApp

task packageNpmApp(type: Zip) {
    dependsOn yarn_run_start
    baseName 'npm-app'
    extension 'jar'
    destinationDir = file("${projectDir}/build_packageNpmApp")
    from('build') {
        // optional path under which output will be visible in Java classpath, e.g. static resources path
        into 'static' 
    }
}

configurations {
    npmResources
}
configurations.default.extendsFrom(configurations.npmResources)

artifacts {
    npmResources(packageNpmApp.archivePath) {
        builtBy packageNpmApp
        type "jar"
    }
}

clean {
    delete packageNpmApp.archivePath
}